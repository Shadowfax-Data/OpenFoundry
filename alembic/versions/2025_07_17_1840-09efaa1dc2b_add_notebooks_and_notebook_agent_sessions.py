"""add notebooks and notebook agent sessions

Revision ID: 09efaa1dc2b
Revises: 3fcbda9ed259
Create Date: 2025-07-17 18:40:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '09efaa1dc2b'
down_revision: Union[str, Sequence[str], None] = '3fcbda9ed259'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Add new enum value to existing AgentSessionType enum
    op.execute("ALTER TYPE agentsessiontype ADD VALUE 'NOTEBOOK_AGENT_SESSION'")

    # Create notebooks table
    op.create_table('notebooks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('deleted_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_on', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    # Create notebook_connections table
    op.create_table('notebook_connections',
    sa.Column('notebook_id', sa.UUID(), nullable=False),
    sa.Column('connection_id', sa.UUID(), nullable=False),
    sa.Column('created_on', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['connection_id'], ['connections.id'], ),
    sa.ForeignKeyConstraint(['notebook_id'], ['notebooks.id'], ),
    sa.PrimaryKeyConstraint('notebook_id', 'connection_id')
    )

    # Create notebook_agent_sessions table
    op.create_table('notebook_agent_sessions',
    sa.Column('notebook_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_on', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['agent_sessions.id'], ),
    sa.ForeignKeyConstraint(['notebook_id'], ['notebooks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notebook_agent_sessions')
    op.drop_table('notebook_connections')
    op.drop_table('notebooks')

    # Note: PostgreSQL doesn't support removing enum values easily,
    # so we'll leave the enum value in place for backward compatibility
    # ### end Alembic commands ###
