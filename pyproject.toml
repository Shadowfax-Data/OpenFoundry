[tool.poetry]
name = "openfoundry"
version = "0.1.0"
description = ""
authors = ["Shadowfax AI <founders@shadowfaxdata.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.115.14"}
uvicorn = "^0.35.0"
sqlalchemy = "^2.0.41"
alembic = "^1.16.2"
psycopg2-binary = "^2.9.10"
uuid6 = "^2025.0.0"
python-dotenv = "^1.1.1"
docker = "^7.1.0"
openai-agents = "^0.2.0"
httpx = "^0.28.1"
httpx-retries = "^0.4.0"
pyyaml = "^6.0.2"
numpy = "^2.3.1"
cryptography = "^45.0.5"
snowflake-connector-python = "^3.16.0"
pyarrow = "^18.1.0"
databricks-sql-connector = {extras = ["pyarrow"], version = "^4.0.5"}
clickhouse-connect = "^0.8.18"
google-cloud-bigquery = "^3.35.0"
google-cloud-bigquery-storage = "^2.32.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.0"
mypy = "^1.8.0"
pre-commit = "^4.0.0"
types-requests = "^2.31.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core<3.0.0,>=2",
]

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "alembic/versions/*.py",
]

[tool.ruff.lint]
select = ["D", "E", "F", "W"]
ignore = [
    "B009",  # Don't automatically convert setattr() to direct attribute assignment
    "SIM118",  # Don't convert setattr(x, "y", z) to x.y = z
    "D1",
    "D401",  # Don't require imperative mood in docstrings
    "E501",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
ignore_missing_imports = true
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "alembic/",
]

disable_error_code = ["attr-defined", "no-any-return"]
